import java.time.LocalDate
import java.time.LocalTime
import java.time.ZoneId
import java.time.ZonedDateTime

plugins {
    id 'ear'
    id 'idea'
    id 'java'
}

def versionNumber = '1.0.0'
version = '1.0.0'

def codeRevision = '1.0'

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'
    apply plugin: 'project-report'

    repositories {
        mavenLocal()
        mavenCentral()
    }
    group = 'org.example'
    version = '0.0.1-SNAPSHOT'

    sourceCompatibility = targetCompatibility = JavaVersion.VERSION_1_8
    [compileJava, compileTestJava]*.options*.encoding = 'UTF-8'

    tasks.withType(Jar) {
        manifest {
            attributes 'Implementation-Title': project.name,
                    'Implementation-Version': project.version,
                    'Code-Revision': codeRevision,
                    'Build-Date': LocalDate.now(),
                    'Build-Time': LocalTime.now(),
                    'Built-By': System.properties['user.name'],
                    'Build-Timestamp': ZonedDateTime.now(ZoneId.of("Europe/Kiev")),
                    'Build-Jdk': "${System.properties['java.version']} ${System.properties['java.vendor']} ${System.properties['java.vm.version']}",
                    'Build-OS': "${System.properties['os.name']} ${System.properties['os.arch']} ${System.properties['os.version']}",
                    'Created-By': "Gradle ${gradle.gradleVersion}"
        }
    }

    test {
        useJUnitPlatform()
        testLogging {
            events "passed", "skipped", "failed"
        }
        failFast = true
    }

    clean { delete 'out' }
}

dependencies {
    deploy project(path: ':application', configuration: 'archives')
	earlib project(':library')

    earlib ("org.springframework.boot:spring-boot-starter-actuator:${springBoot}") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    earlib ("com.lmax:disruptor:${comLmax}")
    earlib("org.springframework.boot:spring-boot-starter-web:${springBoot}") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
    earlib "org.springframework.boot:spring-boot-starter-log4j2:${springBoot}"
    earlib "org.apache.commons:commons-text:${apacheCommonText}"
    earlib "org.example:configstorage:${configstorage}"

    earlib ("org.springframework.boot:spring-boot-starter-data-jpa:${springDataJPA}") {
        exclude group: 'org.springframework.boot', module: 'spring-boot-starter-logging'
    }
}

ear {
    appDirName 'src/main/app'
    libDirName 'lib'
    deploymentDescriptor {
        versionNumber = "7"
        applicationName = "multimodule"
        initializeInOrder = true
        displayName = "multimodule"
        description = "multimodule spring boot app - ear - gradle"
        webModule("application.war", "web/ear")
    }
}

